{
	"info": {
		"_postman_id": "41d5dbdd-b442-419b-87b6-3a05f58eb3d6",
		"name": "Trello assignment",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create board edit 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Board should be created\", function () {\r",
							"    //var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(decodeURIComponent(pm.request.url.query.toObject().name));\r",
							"    pm.expect(jsonData.name).to.eql(pm.collectionVariables.get(\"boardName\"));\r",
							"});\r",
							"pm.test(\"Board should be private\", function () {\r",
							"    //var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.prefs.permissionLevel).to.eql(\"private\");\r",
							"});\r",
							"\r",
							"pm.collectionVariables.set(\"boardId\", jsonData.id);\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const randomInt = getRandomInt();\r",
							"pm.collectionVariables.set(\"boardName\", \"Board From API \" +randomInt);\r",
							"\r",
							"function getRandomInt(){\r",
							"    return parseInt(Math.random() * 10000);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/boards/?key={{trelloapikey}}&token={{trellotoken}}&name={{boardName}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"boards",
						""
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloapikey}}"
						},
						{
							"key": "token",
							"value": "{{trellotoken}}"
						},
						{
							"key": "name",
							"value": "{{boardName}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create list TODO",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"New list name\", function () {\r",
							"    //var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(pm.request.url.query.toObject().name);\r",
							"});\r",
							"\r",
							"pm.test(\"New list not closed\", function () {\r",
							"    //var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.closed).to.eql(false);\r",
							"});\r",
							"\r",
							"pm.collectionVariables.set(\"todoListId\", jsonData.id);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/lists/?key={{trelloapikey}}&token={{trellotoken}}&name=TODO&idBoard={{boardId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"lists",
						""
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloapikey}}"
						},
						{
							"key": "token",
							"value": "{{trellotoken}}"
						},
						{
							"key": "name",
							"value": "TODO"
						},
						{
							"key": "idBoard",
							"value": "{{boardId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create list DONE",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"New list name\", function () {\r",
							"    //var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(pm.request.url.query.toObject().name);\r",
							"});\r",
							"\r",
							"pm.test(\"New list not closed\", function () {\r",
							"    //var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.closed).to.eql(false);\r",
							"});\r",
							"\r",
							"pm.collectionVariables.set(\"doneListId\", jsonData.id);\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/lists/?key={{trelloapikey}}&token={{trellotoken}}&name=DONE&idBoard={{boardId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"lists",
						""
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloapikey}}"
						},
						{
							"key": "token",
							"value": "{{trellotoken}}"
						},
						{
							"key": "name",
							"value": "DONE"
						},
						{
							"key": "idBoard",
							"value": "{{boardId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create card on TODO",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Test card name\", function () {\r",
							"    //var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(decodeURIComponent(pm.request.url.query.toObject().name));\r",
							"});\r",
							"pm.test(\"New list not closed\", function () {\r",
							"    //var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.closed).to.eql(false);\r",
							"});\r",
							"\r",
							"pm.test(\"Test parent list\", function () {\r",
							"    //var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.idList).to.eql(pm.collectionVariables.get(\"todoListId\"));\r",
							"});\r",
							"pm.test(\"Test parent board\", function () {\r",
							"    //var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.idBoard).to.eql(pm.collectionVariables.get(\"boardId\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Test no votes or attachments\", function () {\r",
							"    //var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.badges.votes).to.eql(0);\r",
							"    pm.expect(jsonData.badges.attachments).to.eql(0);\r",
							"});\r",
							"\r",
							"pm.collectionVariables.set(\"cardId\", jsonData.id);\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cards/?key={{trelloapikey}}&token={{trellotoken}}&name=Learn Postman&idList={{todoListId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cards",
						""
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloapikey}}"
						},
						{
							"key": "token",
							"value": "{{trellotoken}}"
						},
						{
							"key": "name",
							"value": "Learn Postman"
						},
						{
							"key": "idList",
							"value": "{{todoListId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Move card from TODO to DONE",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Test card name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"Learn Postman\");\r",
							"});\r",
							"\r",
							"pm.test(\"Test parent list\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.idList).to.eql(pm.collectionVariables.get(\"doneListId\"));\r",
							"\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cards/:cardId?key={{trelloapikey}}&token={{trellotoken}}&idList={{doneListId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cards",
						":cardId"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloapikey}}"
						},
						{
							"key": "token",
							"value": "{{trellotoken}}"
						},
						{
							"key": "idList",
							"value": "{{doneListId}}"
						}
					],
					"variable": [
						{
							"key": "cardId",
							"value": "{{cardId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/:idBoard?key={{trelloapikey}}&token={{trellotoken}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						":idBoard"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloapikey}}"
						},
						{
							"key": "token",
							"value": "{{trellotoken}}"
						}
					],
					"variable": [
						{
							"key": "idBoard",
							"value": "{{boardId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify board deletion",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.collectionVariables.unset(\"boardId\");\r",
							"pm.collectionVariables.unset(\"todoListId\");\r",
							"pm.collectionVariables.unset(\"doneListId\");\r",
							"pm.collectionVariables.unset(\"cardId\");\r",
							"pm.collectionVariables.unset(\"boardName\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/:boardKey?key={{trelloapikey}}&token={{trellotoken}}&fields=all",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						":boardKey"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloapikey}}"
						},
						{
							"key": "token",
							"value": "{{trellotoken}}"
						},
						{
							"key": "fields",
							"value": "all"
						}
					],
					"variable": [
						{
							"key": "boardKey",
							"value": "{{boardId}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.trello.com/1"
		},
		{
			"key": "boardNumber",
			"value": ""
		}
	]
}
